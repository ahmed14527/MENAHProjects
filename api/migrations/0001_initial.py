# Generated by Django 5.0.6 on 2025-04-29 00:35

import api.models
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Baby',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_en', models.CharField(max_length=100)),
                ('name_ar', models.CharField(max_length=100)),
                ('mrn', models.CharField(max_length=50, unique=True)),
                ('visit_number', models.CharField(max_length=50)),
                ('passport_or_id', models.CharField(max_length=50)),
                ('birth_certificate_id', models.CharField(max_length=50)),
                ('date_of_birth', models.DateField()),
                ('current_date', models.DateField()),
                ('days_of_life', models.IntegerField()),
                ('gestational_age_at_birth', models.IntegerField(help_text='Gestational age at birth in weeks')),
                ('corrected_gestational_age', models.IntegerField(help_text='Corrected gestational age in weeks')),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female')], max_length=6)),
                ('birth_weight', models.FloatField(help_text='Birth weight in grams')),
            ],
        ),
        migrations.CreateModel(
            name='BabyFacePhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(upload_to=api.models.face_photo_upload)),
                ('captured_at', models.DateTimeField(auto_now_add=True)),
                ('baby', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.baby')),
            ],
        ),
        migrations.CreateModel(
            name='BabyFootPrint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=api.models.footprint_upload)),
                ('captured_at', models.DateTimeField(auto_now_add=True)),
                ('baby', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.baby')),
            ],
        ),
        migrations.CreateModel(
            name='BabyRetinaPrint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=api.models.retina_upload)),
                ('captured_at', models.DateTimeField(auto_now_add=True)),
                ('baby', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.baby')),
            ],
        ),
        migrations.CreateModel(
            name='BottleQRCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bottle_number', models.PositiveIntegerField()),
                ('unique_number', models.CharField(max_length=100, unique=True)),
                ('qr_code_image', models.ImageField(upload_to=api.models.qr_code_upload)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('baby', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.baby')),
            ],
        ),
        migrations.CreateModel(
            name='EBMBottle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField()),
                ('date_expressed', models.DateField()),
                ('date_delivered', models.DateField()),
                ('bottle_number', models.PositiveIntegerField()),
                ('unique_number', models.CharField(max_length=100, unique=True)),
                ('volume_ml', models.FloatField()),
                ('baby', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.baby')),
            ],
        ),
        migrations.CreateModel(
            name='EBMUse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('volume_used_ml', models.FloatField()),
                ('discarded_volume_ml', models.FloatField(blank=True, null=True)),
                ('total_used_bottles', models.IntegerField(default=0)),
                ('total_volume_used', models.FloatField(default=0.0)),
                ('total_milk_discards', models.IntegerField(default=0)),
                ('total_variable_ebm_bottles', models.IntegerField(default=0)),
                ('ebm_bottle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.ebmbottle')),
            ],
        ),
        migrations.CreateModel(
            name='MilkVerification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('verified', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('verified', 'Verified'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('verify_face_with_qr', models.BooleanField(default=False)),
                ('verify_footprint_with_qr', models.BooleanField(default=False)),
                ('verify_retina_with_qr', models.BooleanField(default=False)),
                ('verify_mother_id_or_fingerprint', models.BooleanField(default=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('baby', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.baby')),
                ('bottle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.ebmbottle')),
                ('nurse_one', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verifications_as_nurse_one', to=settings.AUTH_USER_MODEL, validators=[api.models.validate_nurse])),
                ('nurse_two', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verifications_as_nurse_two', to=settings.AUTH_USER_MODEL, validators=[api.models.validate_nurse])),
            ],
        ),
        migrations.CreateModel(
            name='MotherID',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_image', models.ImageField(upload_to=api.models.mother_id_upload)),
                ('scanned_at', models.DateTimeField(auto_now_add=True)),
                ('baby', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='api.baby')),
            ],
        ),
        migrations.CreateModel(
            name='MotherInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_ar', models.CharField(max_length=100)),
                ('name_en', models.CharField(max_length=100)),
                ('age', models.PositiveSmallIntegerField()),
                ('mother_mrn', models.CharField(max_length=50)),
                ('gravida', models.PositiveSmallIntegerField()),
                ('para', models.PositiveSmallIntegerField()),
                ('abortion', models.PositiveSmallIntegerField()),
                ('delivery_date', models.DateField()),
                ('delivery_type', models.CharField(choices=[('Normal', 'Normal Vaginal Delivery'), ('C-Section', 'C-Section')], default='Normal', max_length=10)),
                ('baby', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='api.baby')),
            ],
        ),
    ]
